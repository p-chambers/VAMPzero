#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Copyright: Deutsches Zentrum fuer Luft- und Raumfahrt e.V., 2015 (c)
Contact: daniel.boehnke@dlr.de and jonas.jepsen@dlr.de
'''
from ctypes import c_char_p

from VAMPzero.Lib.TIXI.tixi import openTIXI, checkElement, getText
from VAMPzero.Lib.Log.log import zeroLogger


def importGUI(myAircraft,path):
    '''
    This is an import routine for simple input from the tool-specific part of a
    CPACS file. This also reads all information that can be generated by the
    simple GUI available in the binary version of VAMPzero

    It takes an *aircraft* as input. This is necessary to set the values in
    the aircraft according to the information given in *path*. Usually
    *path* is specified as ./ToolInput/toolInput.xml
    '''
    log = zeroLogger('General')
    log.info('')
    log.info("##############################################################################")
    log.info('VAMPzero GUI: importing GUI Values from: %s'%path)
    log.info("reading toolspecific/GUI inputs")
    log.info("##############################################################################")
    
    myAircraft.modelUID.cpacsImport(path)
    
    if myAircraft.modelUID.getValue() != '':
        log.info('VAMPzero GUI: Running with: %s as modelUID.'%myAircraft.modelUID.getValue())
    else:
        log.warning('VAMPzero GUI: No valid information for modelUID!')

    TIXIHandle  = openTIXI(path)
    cpacsVal    = c_char_p() 
    top = "/cpacs/toolspecific/vampZero/components/"

    ##Component#############################################################
    countC = 1
    while 1==1:
        pathC = top+'component['+str(countC)+']'

        if checkElement(TIXIHandle,pathC):
            nameC = getText(TIXIHandle, pathC+'/name')
            
            if nameC: 
                log.debug('VAMPzero GUI: importing for component: %s'%nameC)
            else:
                break

            ##Discipline#############################################################                        
            countD  = 1
            while 1==1:
                pathD = pathC+'/disciplines/discipline['+str(countD)+']'
                
                if checkElement(TIXIHandle,pathD):
                
                    ##Parameter#############################################################    
                    countP  = 1
                    while 1==1:
                        pathP = pathD+'/parameters/parameter['+str(countP)+']'

                        if checkElement(TIXIHandle,pathP):
                            nameP   = getText(TIXIHandle,pathP+'/name')
                            valueP  = getText(TIXIHandle,pathP+'/value')
                            factorP = getText(TIXIHandle,pathP+'/factor')
                            statusP = getText(TIXIHandle,pathP+'/status')
                            exportP = getText(TIXIHandle,pathP+'/exportTS')

                            setParameter(myAircraft, nameC, nameP, valueP, factorP, statusP, exportP)
                            countP += 1
                        else:
                            break

                    countD += 1
                else:
                    break
            countC += 1
        else:
            break
        

def getParameter(myAircraft, myList):
    '''
    Returns the parameter given by the component and parameter names in myList.
    '''
    param = myAircraft
    for c in myList:
        try:
            param = getattr(param, c)
        except AttributeError:
            try:
                param = getattr(param, c.capitalize())
            except:
                pass


    return param

def setParameter(myAircraft, nameC, nameP, valueP, factorP, statusP, exportP):
    '''
    will try to set a value from importGUI input
    '''
    nameMappingDict = {'Htpairfoil': ['htp', 'htpairfoil'],
                       'Vtpairfoil': ['vtp', 'vtpairfoil'],
                       'Wingairfoil': ['wing', 'wingairfoil'],
                       'Aircraft': [],
                       'Flap': ['wing', 'flap'],
                       'Landinggear': ['landingGear'],
                       '': []}
    nameCList = []
    if nameC not in nameMappingDict.keys():
        nameCList = nameC.lower().strip('.').split('.')
    else:
        nameCList = nameMappingDict[nameC]
    
    log = zeroLogger('General')
    
    myList = nameCList + [nameP]
    param = getParameter(myAircraft, myList)
    
    if factorP != '' and not factorP is None:
        try:
            log.debug('VAMPzero GUI: setting factor of %s to %s' %('.'.join(myList), factorP))
            param.setFactor(float(factorP))
        except:
            log.warning('VAMPzero GUI: no success in setting factor of %s'%'.'.join(myList))

    if valueP != '' and not valueP is None:
        try:
            log.debug('VAMPzero GUI: setting value of %s to %s' %('.'.join(myList), valueP))
            param.setValueFix(float(valueP))
        except:
            log.warning('VAMPzero GUI: no success in setting value of %s'%'.'.join(myList))
    
    if statusP != '' and not statusP is None:
        try:
            log.debug('VAMPzero GUI: setting status of %s to %s' %('.'.join(myList), statusP))
            param['status'] = statusP
        except:
            log.warning('VAMPzero GUI: no success in setting status of %s'%'.'.join(myList))
    
    if exportP in ('true', 'True', '1.0', '1.', '1'):
        try:
            log.debug('VAMPzero GUI: setting exportTS of %s to True' %('.'.join(myList)))
            param['exportTS'] = True
        except:
            log.warning('VAMPzero GUI: no success in setting exportTS of %s'%'.'.join(myList))
